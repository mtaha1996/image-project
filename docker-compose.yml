version: "3.8"

services:
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./image_provider/docker/db/.env

  web:
    build:
      context: .
      dockerfile: ./image_provider/docker/web/Dockerfile
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DJANGO_SETTINGS_MODULE: image_provider.settings
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./image_provider/docker/web/.env

  image-db:
    image: postgres
    volumes:
      - image_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${IMAGE_POSTGRES_DB}
      POSTGRES_USER: ${IMAGE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${IMAGE_POSTGRES_PASSWORD}
    ports:
      - "15432:5432"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./image_harvester/.env
    depends_on:
      - db
      - web

  image-harvester:
    build:
      context: .
      dockerfile: ./image_harvester/Dockerfile
    container_name: go_image_harvester
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - SEARCH_ENGINE_ID=${SEARCH_ENGINE_ID}
      - BASE_URL=${BASE_URL}
      - IMAGE_POSTGRES_DB=${IMAGE_POSTGRES_DB}
      - IMAGE_POSTGRES_USER=${IMAGE_POSTGRES_USER}
      - IMAGE_POSTGRES_PASSWORD=${IMAGE_POSTGRES_PASSWORD}
      - IMAGE_POSTGRES_HOST=${IMAGE_POSTGRES_HOST}
      - IMAGE_POSTGRES_PORT=${IMAGE_POSTGRES_PORT}
    env_file:
      - ./image_harvester/docker/.env
    depends_on:
      - image-db
    volumes:
      - image_harvester_data:/app

volumes:
  postgres_data:
  image_postgres_data:
  image_harvester_data:
